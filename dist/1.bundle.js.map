{"version":3,"sources":["webpack:///./src/react/Container/ContactList/ContactList.css","webpack:///./src/react/Container/Tab/Tab.css","webpack:///./src/react/Container/TabDetails/TabDetails.css","webpack:///./src/images/close.svg","webpack:///./src/react/Container/ContactList/ContactList.css?fc47","webpack:///./src/react/Container/ContactList/ContactList.js","webpack:///./src/react/Container/Tab/Tab.css?5ae8","webpack:///./src/react/Container/Tab/Tab.js","webpack:///./src/react/Container/TabDetails/TabDetails.css?a6a9","webpack:///./src/react/Container/TabDetails/TabDetails.js","webpack:///./src/react/DataAcess/DataAccess.js"],"names":["ContactList","props","alphabetsArray","split","push","contactListArray","map","alphabetName","alphabet","totalCount","contactArray","state","error","fetchContactList","selectedAlphabet","selectedAlphabetBody","selectedContact","undefined","filteredContacts","paginatedContacts","displayedContacts","searchedContact","start","end","backButton","nextButton","instance","get","then","contactListMap","forEach","set","value","response","data","results","contact","firstName","name","first","lastName","last","userName","login","username","email","phone","street","location","number","city","postcode","imageUrl","picture","thumbnail","charAt","toLowerCase","length","setState","filteredValue","filterContact","catch","index","creteTabBody","event","target","filter","toUpperCase","match","goNext","slice","contacts","pagination","tabList","li","showDetails","bind","alphabetsTab","showTab","Classes","TabHeader","TabBody","TabSearch","TabBodyRow","display","Error","TabBodySecondRow","val","TabBodyFirstRow","TabButton","goBack","Component","Tab","classesArray","selected","Selected","tabNameClasses","TabName","TabNameZeroCount","join","click","TabCount","TabDetails","List","ListBody","CloseIcon","ListImage","ListDetails","axios","create","baseURL"],"mappings":"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","file":"1.bundle.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = module.exports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2Yv_-GBzR0PEKHYFdKGls6{margin:70px auto;max-width:1035px;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:12px}.KN0VlL2GwRK-JH3FCMn2U,.PVH2J6dKWPatAIrkSvlZ{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-ms-flexbox;display:flex}.KN0VlL2GwRK-JH3FCMn2U{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}._1bjEYKnGJy-eE4VP8bd6CY{padding:12px;border-left:1px solid green;border-right:1px solid green;background-color:#01c3a7}._1bjEYKnGJy-eE4VP8bd6CY,._1bjEYKnGJy-eE4VP8bd6CY input{display:-webkit-box;display:-ms-flexbox;display:flex}._1bjEYKnGJy-eE4VP8bd6CY input{width:40%;height:25px;border-radius:5px;padding:5px;font-size:16px}._1bjEYKnGJy-eE4VP8bd6CY span{width:100px;height:25px;border-radius:5px;background-color:#f0f8ff;padding:5px 0;text-align:center;-webkit-box-shadow:0 0 5px #000;box-shadow:0 0 5px #000;margin:0 12px}._1q-0025K-VqbQ_68tHNnl_{padding:12px;height:500px;display:-webkit-box;display:-ms-flexbox;display:flex;background-color:#01c3a7;border:1px solid green;border-top:0;border-bottom:0}._1U09VH2Cbp04o7031M3pyN,._2O49B_rERK08bxaiVaJrbm{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.N_bbZ3nkAPz-3uqTNTYlv{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:12px;background-color:#01c3a7;border:1px solid green;border-top:0}.N_bbZ3nkAPz-3uqTNTYlv div{width:100px;background:#0ff;border-radius:10px;padding:7px 0;text-align:center;cursor:pointer}.N_bbZ3nkAPz-3uqTNTYlv div:hover{background-color:#008b8b}._3VRTmn_sSt_L4x7vcUnaqh{color:red}@media(max-width:768px){._2Yv_-GBzR0PEKHYFdKGls6{-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row}._2Yv_-GBzR0PEKHYFdKGls6,.PVH2J6dKWPatAIrkSvlZ{-webkit-box-direction:normal}.PVH2J6dKWPatAIrkSvlZ{-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column}.KN0VlL2GwRK-JH3FCMn2U{width:100%}._1bjEYKnGJy-eE4VP8bd6CY{display:-webkit-box;display:-ms-flexbox;display:flex;padding:12px 24px 0 12px;border-left:0;border-top:1px solid green}._1bjEYKnGJy-eE4VP8bd6CY input{width:100%}._1q-0025K-VqbQ_68tHNnl_{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;border:1px solid green;border-top-color:#01c3a7;border-bottom:0;border-left:0}._1U09VH2Cbp04o7031M3pyN,._2O49B_rERK08bxaiVaJrbm{-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0}.N_bbZ3nkAPz-3uqTNTYlv{height:40px;border:1px solid green;border-top-color:#01c3a7;border-left:0}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"ContactList\": \"_2Yv_-GBzR0PEKHYFdKGls6\",\n\t\"TabBody\": \"KN0VlL2GwRK-JH3FCMn2U\",\n\t\"TabHeader\": \"PVH2J6dKWPatAIrkSvlZ\",\n\t\"TabSearch\": \"_1bjEYKnGJy-eE4VP8bd6CY\",\n\t\"TabBodyRow\": \"_1q-0025K-VqbQ_68tHNnl_\",\n\t\"TabBodyFirstRow\": \"_1U09VH2Cbp04o7031M3pyN\",\n\t\"TabBodySecondRow\": \"_2O49B_rERK08bxaiVaJrbm\",\n\t\"TabButton\": \"N_bbZ3nkAPz-3uqTNTYlv\",\n\t\"Error\": \"_3VRTmn_sSt_L4x7vcUnaqh\"\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = module.exports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2BaYu8tzT-qgyiOls59WId{width:100%;height:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border:1px solid green;background-color:#fff;color:#000;border-top-left-radius:5px;border-top-right-radius:5px;cursor:pointer}._3GpKzB5bV5Ft0MtmpsNy9_{width:100%}._3GpKzB5bV5Ft0MtmpsNy9_,._2BaYu8tzT-qgyiOls59WId:active,._2BaYu8tzT-qgyiOls59WId:hover{background-color:#01c3a7;border-bottom:1px solid #01c3a7}._31_EgDwo99-pUpZsY2ta9T{-ms-flex-item-align:start;align-self:flex-start;font-size:16px;font-weight:bolder}.hwCaVB6opafx-RHgi9YNI{font-weight:400;color:grey}._2FVK3sRuiQv5m_jW9ddH9L{font-weight:700;-ms-flex-item-align:end;align-self:flex-end;border-radius:100%;font-size:8px}@media(max-width:768px){._2BaYu8tzT-qgyiOls59WId{width:30px;border:1px solid green;border-top-left-radius:5px;border-bottom-left-radius:5px;border-top-right-radius:0}._2BaYu8tzT-qgyiOls59WId:hover{border-bottom:1px solid green}._3GpKzB5bV5Ft0MtmpsNy9_,._2BaYu8tzT-qgyiOls59WId:hover{border-right:1px solid #01c3a7}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Tab\": \"_2BaYu8tzT-qgyiOls59WId\",\n\t\"Selected\": \"_3GpKzB5bV5Ft0MtmpsNy9_\",\n\t\"TabName\": \"_31_EgDwo99-pUpZsY2ta9T\",\n\t\"TabNameZeroCount\": \"hwCaVB6opafx-RHgi9YNI\",\n\t\"TabCount\": \"_2FVK3sRuiQv5m_jW9ddH9L\"\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_GET_URL_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL_IMPORT_0___ = require(\"../../../images/close.svg\");\nexports = module.exports = ___CSS_LOADER_API_IMPORT___(false);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\nexports.push([module.id, \"._3P8Z2h6PxLSUEP2RCqv07r{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-right:12px;margin-bottom:5px}._3igMs-e5STf56cT0sgp_70,._3P8Z2h6PxLSUEP2RCqv07r{display:-webkit-box;display:-ms-flexbox;display:flex}._3igMs-e5STf56cT0sgp_70{padding:0 12px;height:40px;background:#fff;margin:1px;cursor:pointer}._3igMs-e5STf56cT0sgp_70 span{-ms-flex-item-align:center;align-self:center}._3igMs-e5STf56cT0sgp_70:hover{background:#7fffd4}._2UFJsVbVjlyd_vHLhy96Fu{position:relative;z-index:5;height:100%;display:none;margin:0 1px;padding:12px;background-color:#ffdab9}.SsIMGJYzTcwIewlkwQEj0{-ms-flex-item-align:center;align-self:center;-webkit-box-shadow:0 0 5px #000;box-shadow:0 0 5px #000;border-radius:100%;width:100px;height:100px}._2_StdyxuuoNPtuZJrStyFO{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding:0 24px}._2_StdyxuuoNPtuZJrStyFO div>span:last-child{font-weight:bolder}._2XO4g98kgrOjBmm1d9IHgK{top:10px;right:10px;position:absolute;background:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") 50%;width:40px;height:40px;cursor:pointer}@media(max-width:768px){._3P8Z2h6PxLSUEP2RCqv07r{width:100%}}@media(max-width:568px){._2UFJsVbVjlyd_vHLhy96Fu{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.SsIMGJYzTcwIewlkwQEj0{-ms-flex-item-align:start;align-self:flex-start;border-radius:5px;width:80px;height:80px}._2_StdyxuuoNPtuZJrStyFO{padding:0;margin:10px 0 0;font-size:12px}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"TabDetails\": \"_3P8Z2h6PxLSUEP2RCqv07r\",\n\t\"List\": \"_3igMs-e5STf56cT0sgp_70\",\n\t\"ListBody\": \"_2UFJsVbVjlyd_vHLhy96Fu\",\n\t\"ListImage\": \"SsIMGJYzTcwIewlkwQEj0\",\n\t\"ListDetails\": \"_2_StdyxuuoNPtuZJrStyFO\",\n\t\"CloseIcon\": \"_2XO4g98kgrOjBmm1d9IHgK\"\n};","module.exports = __webpack_public_path__ + \"images/close.svg\";","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!./ContactList.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","import React, { Component } from 'react';\r\nimport Classes from './ContactList.css';\r\nimport Tab from '../Tab/Tab';\r\nimport TabDetails from '../TabDetails/TabDetails';\r\nimport instance from '../../DataAcess/DataAccess';\r\n\r\nclass ContactList extends Component {\r\n\r\n    //Constructor to initialize the state and set default value.\r\n    constructor(props){\r\n        //Call to super with props.\r\n        super(props);\r\n\r\n        //Create alphabet array\r\n        let alphabetsArray = [...\"abcdefghijklmnopqrstuvwxyz\".split('')];\r\n\r\n        //Push value for unknown alphabet.\r\n        alphabetsArray.push(\"--\");\r\n\r\n        //Create contactList schema with alphabets and without contacts.\r\n        let contactListArray = alphabetsArray.map( alphabet =>{\r\n            return {\r\n                alphabetName: alphabet,\r\n                totalCount:0,\r\n                contactArray:[]\r\n            }\r\n        });\r\n\r\n        //Create state with the required fields.\r\n        this.state = {\r\n            error:'none',\r\n            fetchContactList:true,\r\n            contactListArray: contactListArray,\r\n            selectedAlphabet:contactListArray[0].alphabetName,\r\n            selectedAlphabetBody:contactListArray[0],\r\n            selectedContact: undefined,\r\n            filteredContacts:contactListArray[0].contactArray,\r\n            paginatedContacts:contactListArray[0].contactArray,\r\n            displayedContacts:contactListArray[0].contactArray,\r\n            searchedContact:'',\r\n            start:0,\r\n            end:0,\r\n            backButton: 'none',\r\n            nextButton: 'none'\r\n        };\r\n\r\n    }\r\n\r\n    //LifeCycle hook called after class component got mounted.\r\n    componentDidMount() {\r\n\r\n        // Get contacts list from the service.\r\n        instance.get('/?results=100')\r\n            .then(response => {\r\n\r\n                // Change the flag to fetch the contact list.\r\n                this.state.fetchContactList = false;\r\n\r\n                // Create map with all the alphabets as the key.\r\n                let contactListMap = new Map();\r\n                this.state.contactListArray.forEach(value => {\r\n                    contactListMap.set(value.alphabetName, []);\r\n                });\r\n\r\n                //Sort all the contact list as per the alphabet\r\n                response.data.results.forEach(value => {\r\n                    let contact = {\r\n                        firstName: value.name.first,\r\n                        lastName: value.name.last,\r\n                        userName: value.login.username,\r\n                        email: value.email,\r\n                        phone: value.phone,\r\n                        street: `${value.location.street.number}, ${value.location.street.name}`,\r\n                        city: value.location.city,\r\n                        state: value.location.state,\r\n                        postcode: value.location.postcode,\r\n                        imageUrl: value.picture.thumbnail\r\n                    };\r\n                    let alphabet = contact.firstName.charAt(0).toLowerCase();\r\n                    if (contactListMap.get(alphabet) !== undefined) {\r\n                        contactListMap.get(alphabet).push(contact);\r\n                    } else {\r\n                        contactListMap.get(\"--\").push(contact);\r\n                    }\r\n                });\r\n\r\n                // Transfer all the contacts and calculate the total count\r\n                const contactListArray = this.state.contactListArray.map(value => {\r\n                    value.contactArray = contactListMap.get(value.alphabetName);\r\n                    value.totalCount = value.contactArray.length;\r\n                    return value;\r\n                });\r\n\r\n                //Set the state\r\n                this.setState({\r\n                    error:'none',\r\n                    contactListArray: contactListArray,\r\n                    filteredValue: contactListArray[0].contactArray\r\n                });\r\n\r\n                //Call the filterContact function to set the start and end value.\r\n                this.filterContact();\r\n\r\n            }).catch(error => {\r\n                    this.setState({\r\n                        error: 'block'\r\n                    })\r\n        });\r\n\r\n    }\r\n\r\n    //This function is used to show Tabs Body as per alphabet selection.\r\n    showTab(index){\r\n        let selectedAlphabetBody = this.state.contactListArray[index];\r\n        this.setState({\r\n            selectedAlphabet:selectedAlphabetBody.alphabetName,\r\n            selectedAlphabetBody:selectedAlphabetBody,\r\n            selectedContact:undefined,\r\n            searchedContact:undefined,\r\n            start:0,\r\n            end:0\r\n        },()=>{\r\n            this.filterContact();\r\n        });\r\n    }\r\n\r\n    //This function is used to show the full information of the contact clicked on .\r\n    showDetails(username){\r\n        if(username === this.state.selectedContact){\r\n            username  = undefined;\r\n        }\r\n        this.setState({\r\n            selectedContact: username,\r\n        },()=>{\r\n            this.creteTabBody();\r\n        });\r\n    }\r\n\r\n    //This function is used to filter out the contacts which matches the search box input.\r\n    filterContact(event = {target:{value:this.state.searchedContact}}){\r\n        const searchedContact = event.target.value;\r\n        if(searchedContact !== undefined){\r\n            let contactArray = this.state.selectedAlphabetBody.contactArray.filter( value =>{\r\n                return value.firstName.toUpperCase().match(searchedContact.toUpperCase()) ||\r\n                       value.lastName.toUpperCase().match(searchedContact.toUpperCase());\r\n            });\r\n            this.setState({\r\n                start:0,\r\n                end:0,\r\n                searchedContact: searchedContact,\r\n                selectedContact: undefined,\r\n                filteredContacts:contactArray\r\n            },()=>{\r\n                this.goNext();\r\n            });\r\n        }else{\r\n            this.setState({\r\n                start:0,\r\n                end:0,\r\n                searchedContact: searchedContact,\r\n                filteredContacts:this.state.selectedAlphabetBody.contactArray.slice()\r\n            },()=>{\r\n                this.goNext();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //This function is used to move to the next list of Contact details.\r\n    goNext(){\r\n        let contacts = this.state.filteredContacts;\r\n        let start = this.state.end;\r\n        let end = this.state.end;\r\n        end += 10;\r\n        end = end > contacts.length ?  contacts.length : end;\r\n        this.setState({\r\n            start: start,\r\n            end: end,\r\n            nextButton: end === contacts.length ? 'none' : 'block'\r\n        },()=>{\r\n            this.pagination();\r\n        });\r\n    }\r\n\r\n    //This function is used to move back to the list of previous page contact list.\r\n    goBack(){\r\n        let tabList = this.state.filteredContacts;\r\n        let start = this.state.start;\r\n        if(start - 10 < 0 ){\r\n            start = 0;\r\n        }else{\r\n            start -= 10;\r\n        }\r\n        let end = start + 10;\r\n        if(end > tabList.length){\r\n            end = tabList.length;\r\n        }\r\n        this.setState({\r\n            start: start,\r\n            end:end,\r\n            nextButton: end === tabList.length ? 'none' : 'block'\r\n        },()=>{\r\n            this.pagination();\r\n        });\r\n\r\n    }\r\n\r\n    //This function is used to slice the contact of the current page.\r\n    pagination(){\r\n        let contacts = this.state.filteredContacts.slice(this.state.start, this.state.end);\r\n        this.setState({\r\n            paginatedContacts: contacts\r\n        },()=>{\r\n            this.creteTabBody();\r\n        });\r\n    }\r\n\r\n    //This function is used to create the contact list row of the contacts that we get after filter and pagination.\r\n    creteTabBody(){\r\n        let contacts = this.state.paginatedContacts.map((li, index) => {\r\n            return (\r\n                <TabDetails key={index}\r\n                            firstName={li.firstName}\r\n                            lastName={li.lastName}\r\n                            email={li.email}\r\n                            phone={li.phone}\r\n                            street={li.street}\r\n                            city={li.city}\r\n                            state={li.state}\r\n                            postcode={li.postcode}\r\n                            username={li.userName}\r\n                            imageUrl={li.imageUrl}\r\n                            selected={this.state.selectedContact}\r\n                            click={this.showDetails.bind(this, li.userName)} />\r\n            )\r\n        });\r\n        this.setState({\r\n            displayedContacts: contacts,\r\n            backButton: this.state.start === 0 ? 'none' : 'block'\r\n        });\r\n    };\r\n\r\n    render(){\r\n        //This map creates the tab header\r\n        let alphabetsTab = (this.state.contactListArray.map( (value, index) => {\r\n            return <Tab\r\n                name={value.alphabetName}\r\n                totalCount={value.totalCount}\r\n                selected={this.state.selectedAlphabet}\r\n                click={this.showTab.bind(this, index)}\r\n                key={index} />\r\n        }));\r\n\r\n        return(\r\n              <div className={Classes.ContactList}>\r\n\r\n                  <div\r\n                      className={Classes.TabHeader}>\r\n                      {alphabetsTab}</div>\r\n\r\n                  <div className={Classes.TabBody}>\r\n\r\n                      <div className={Classes.TabSearch}>\r\n                          <input\r\n                              type=\"text\"\r\n                              value={this.state.searchedContact || ''}\r\n                              onChange={this.filterContact.bind(this)}\r\n                              placeholder={'Search'} />\r\n                          <span>{this.state.filteredContacts.length}</span>\r\n                      </div>\r\n\r\n                      <div className={Classes.TabBodyRow}>\r\n\r\n                          <div\r\n                              style={{display: this.state.error}}\r\n                              className={Classes.Error}>\r\n                              Service Failed : Try after sometime ! | Contact Administrator !\r\n                          </div>\r\n\r\n                          <div className={Classes.TabBodySecondRow}>\r\n                              {this.state.displayedContacts.filter( (val, index) =>{\r\n                                  return index % 2 === 0\r\n                              })}\r\n                          </div>\r\n\r\n                          <div className={Classes.TabBodyFirstRow}>\r\n                              {this.state.displayedContacts.filter( (val, index) =>{\r\n                                  return index % 2 !== 0\r\n                              })}\r\n                          </div>\r\n\r\n                      </div>\r\n\r\n                      <div className={Classes.TabButton}>\r\n                          <div\r\n                              style={{display: this.state.backButton}}\r\n                              onClick={this.goBack.bind(this)}>Back\r\n                          </div>\r\n                          <div\r\n                              style={{display: this.state.nextButton}}\r\n                              onClick={this.goNext.bind(this)}>Next\r\n                          </div>\r\n                      </div>\r\n\r\n                  </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactList;","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!./Tab.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","import React from 'react';\r\nimport Classes from \"./Tab.css\";\r\n\r\n\r\nconst Tab = (props) =>{\r\n\r\n    //This check is used to combine the classes. To highlight the selected header.\r\n    const classesArray =[Classes.Tab];\r\n    if(props.selected === props.name){\r\n        classesArray.push(Classes.Selected);\r\n    }\r\n\r\n    //This check is used to combine the classes. To make the header alphabet lighter\r\n    const tabNameClasses =[Classes.TabName];\r\n    if(props.totalCount === 0){\r\n        tabNameClasses.push(Classes.TabNameZeroCount);\r\n    }\r\n\r\n    //It return the block of tab with passed name in the props. after applying necessary classes.\r\n    return (\r\n        <div className={classesArray.join(' ')} onClick={props.click}>\r\n            <div className={tabNameClasses.join(' ')}>{props.name}</div>\r\n            <div className={Classes.TabCount}>{props.totalCount}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tab;","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!./TabDetails.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","import React from 'react';\r\nimport Classes from './TabDetails.css';\r\n\r\nconst TabDetails = (props) =>{\r\n    //This by default sets the display of every contact as None to hide it.\r\n    let display = 'none';\r\n\r\n    //This checks the condition if selected username and name passed in props is same then make the display flex to show the details.\r\n    if(props.username === props.selected){\r\n        display = 'flex'\r\n    }\r\n\r\n    //It contains the body of the contact list with Image, Details etc.....\r\n    return (\r\n        <div className={Classes.TabDetails}>\r\n            <div className={Classes.List} onClick={props.click}>\r\n                <span>{`${props.firstName}, ${props.lastName}`}</span>\r\n            </div>\r\n            <div style={{display: display}} className={Classes.ListBody}>\r\n                <div onClick={props.click} className={Classes.CloseIcon} />\r\n                <img className={Classes.ListImage} src={props.imageUrl} alt=\"\"/>\r\n                <div className={Classes.ListDetails}>\r\n                    <div>\r\n                        <span>Username: </span>\r\n                        <span>{props.username}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Phone: </span>\r\n                        <span>{props.phone}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Street: </span>\r\n                        <span>{props.street}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>City: </span>\r\n                        <span>{props.city}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>State: </span>\r\n                        <span>{props.state}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Postcode: </span>\r\n                        <span>{props.postcode}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Email: </span>\r\n                        <span>{props.email}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabDetails;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n   baseURL:'https://randomuser.me/api'\r\n});\r\n\r\n\r\nexport default instance;"],"sourceRoot":""}